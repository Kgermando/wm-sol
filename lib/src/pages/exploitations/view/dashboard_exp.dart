import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:intl/intl.dart';
import 'package:wm_solution/src/constants/app_theme.dart';
import 'package:wm_solution/src/constants/responsive.dart';
import 'package:wm_solution/src/navigation/drawer/drawer_menu.dart';
import 'package:wm_solution/src/navigation/header/header_bar.dart';
import 'package:wm_solution/src/pages/exploitations/components/dashboard/chart_line_projet.dart';
import 'package:wm_solution/src/pages/exploitations/controller/dashboard/dashboard_controller.dart';
import 'package:wm_solution/src/routes/routes.dart';
import 'package:wm_solution/src/widgets/dash_number_exp_widget.dart';

class DashboardExp extends StatefulWidget {
  const DashboardExp({super.key});

  @override
  State<DashboardExp> createState() => _DashboardExpState();
}

class _DashboardExpState extends State<DashboardExp> {
  final GlobalKey<ScaffoldState> scaffoldKey = GlobalKey();
  String title = "Exploitation";
  String subTitle = "Dashboard";

  @override
  Widget build(BuildContext context) {
    final DashboardExpController controller = Get.put(DashboardExpController());

    return SafeArea(
      child: Scaffold(
          key: scaffoldKey,
          appBar: headerBar(context, scaffoldKey, title, subTitle),
          drawer: const DrawerMenu(),
          body: Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Visibility(
                  visible: !Responsive.isMobile(context),
                  child: const Expanded(flex: 1, child: DrawerMenu())),
              Expanded(
                  flex: 5,
                  child: SingleChildScrollView(
                    controller: ScrollController(),
                    physics: const ScrollPhysics(),
                    child: Container(
                        margin: const EdgeInsets.only(
                            top: p20, bottom: p8, right: p20, left: p20),
                        decoration: const BoxDecoration(
                            borderRadius:
                                BorderRadius.all(Radius.circular(20))),
                        child: Padding(
                          padding: const EdgeInsets.symmetric(horizontal: p20),
                          child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Wrap(
                                  alignment: WrapAlignment.spaceEvenly,
                                  children: [
                                    DashNumberExpWidget(
                                        gestureTapCallback: () {
                                          Get.toNamed(
                                              ExploitationRoutes.expProjet);
                                        },
                                        number: '${controller.projetsCount}',
                                        title: 'Total projets',
                                        icon: Icons.group,
                                        color: Colors.blue.shade700),
                                    DashNumberExpWidget(
                                        gestureTapCallback: () {
                                          Get.toNamed(
                                              ExploitationRoutes.expProjet); 
                                        },
                                        number:
                                            '${controller.projetsApprouveCount}',
                                        title: 'Projets approvés',
                                        icon: Icons.work,
                                        color: Colors.green.shade700),
                                    DashNumberExpWidget(
                                        gestureTapCallback: () {
                                          Get.toNamed(
                                              ExploitationRoutes.expProjet);  
                                        },
                                        number:
                                            '${controller.productionsApprouveCount}',
                                        title: 'Productions',
                                        icon: Icons.production_quantity_limits,
                                        color: Colors.teal.shade700),
                                    DashNumberExpWidget(
                                        gestureTapCallback: () {
                                          Get.toNamed(
                                              ExploitationRoutes.expProd);  
                                        },
                                        number:
                                            '${NumberFormat.decimalPattern('fr').format(controller.coutProjetsTotal)} \$',
                                        title: 'Total coût projets',
                                        icon: Icons.monetization_on_outlined,
                                        color: Colors.red.shade700),
                                    DashNumberExpWidget(
                                        gestureTapCallback: () {
                                          Navigator.pushNamed(context,
                                              ExploitationRoutes.expVersement);
                                        },
                                        number:
                                            '${NumberFormat.decimalPattern('fr').format(controller.versementTotal)} \$',
                                        title: 'Total recettes',
                                        icon: Icons.monetization_on,
                                        color: Colors.pink.shade700),
                                    DashNumberExpWidget(
                                        gestureTapCallback: () {
                                           Get.toNamed(
                                              ExploitationRoutes.expVersement); 
                                        },
                                        number:
                                            '${NumberFormat.decimalPattern('fr').format(controller.recettePourcent)} %',
                                        title: 'Recettes en %',
                                        icon: Icons.grain,
                                        color: Colors.grey.shade700),
                                  ],
                                ),
                                Wrap(
                                  children: const [
                                    ChartLineProjet(),
                                  ],
                                )
                              ]),
                        )),
                  ))
            ],
          )),
    );
  }
}
