import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:wm_solution/src/constants/app_theme.dart';
import 'package:wm_solution/src/constants/responsive.dart'; 
import 'package:wm_solution/src/navigation/drawer/drawer_menu.dart';
import 'package:wm_solution/src/navigation/header/header_bar.dart';
import 'package:wm_solution/src/pages/exploitations/components/exp_dd/table_production_exp_dd.dart';
import 'package:wm_solution/src/pages/exploitations/components/exp_dd/table_projet_dd.dart';
import 'package:wm_solution/src/pages/exploitations/controller/notify/notify_exp.dart';
import 'package:wm_solution/src/pages/exploitations/controller/production/production_exp_controller.dart';
import 'package:wm_solution/src/pages/exploitations/controller/projets/projet_controller.dart'; 

class ExpDD extends StatefulWidget {
  const ExpDD({super.key});

  @override
  State<ExpDD> createState() => _ExpDDState();
}

class _ExpDDState extends State<ExpDD> {
  final GlobalKey<ScaffoldState> scaffoldKey = GlobalKey();
  String title = "Exploitation";
  String subTitle = "Direteur de dÃ©partement";

  bool isOpen1 = false;
  bool isOpen2 = false;

  @override
  Widget build(BuildContext context) {
    final NotifyExpController controller = Get.find();
    final ProjetController projetController = Get.find();
    final ProductionExpController productionExpController = Get.find(); 

    final headline6 = Theme.of(context).textTheme.headline6;
    final bodyLarge = Theme.of(context).textTheme.bodyLarge;
    final bodyMedium = Theme.of(context).textTheme.bodyMedium;

    return SafeArea(
            child: Scaffold(
                key: scaffoldKey,
                appBar: headerBar(context, scaffoldKey, title, subTitle),
                drawer: const DrawerMenu(),
                body: Row(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Visibility(
                        visible: !Responsive.isMobile(context),
                        child: const Expanded(flex: 1, child: DrawerMenu())),
                    Expanded(
                        flex: 5,
                        child: SingleChildScrollView(
                          controller: ScrollController(),
                          physics: const ScrollPhysics(),
                          child: Container(
                              margin: const EdgeInsets.only(
                                  top: p20, bottom: p8, right: p20, left: p20),
                              decoration: const BoxDecoration(
                                  borderRadius:
                                      BorderRadius.all(Radius.circular(20))),
                              child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Card(
                                      color: Colors.blue.shade700,
                                      child: ExpansionTile(
                                        leading: const Icon(Icons.folder,
                                            color: Colors.white),
                                        title: Text('Dossier Projets',
                                            style:
                                                (Responsive.isDesktop(context))
                                                    ? headline6!.copyWith(
                                                        color: Colors.white)
                                                    : bodyLarge!.copyWith(
                                                        color: Colors.white)),
                                        subtitle: Obx(() => Text(
                                            "Vous avez ${controller.itemCountProjetDD} dossiers necessitent votre approbation",
                                            style: bodyMedium!.copyWith(
                                                color: Colors.white70))),
                                        initiallyExpanded: false,
                                        onExpansionChanged: (val) {
                                          setState(() {
                                            isOpen1 = !val;
                                          });
                                        },
                                        trailing: const Icon(
                                            Icons.arrow_drop_down,
                                            color: Colors.white),
                                        children: [
                                          TableProjetDD(
                                              projetController:
                                                  projetController)
                                        ],
                                      ),
                                    ),
                                    Card(
                                      color: Colors.green.shade700,
                                      child: ExpansionTile(
                                        leading: const Icon(Icons.folder,
                                            color: Colors.white),
                                        title: Text('Dossier Productions',
                                            style:
                                                (Responsive.isDesktop(context))
                                                    ? headline6!.copyWith(
                                                        color: Colors.white)
                                                    : bodyLarge!.copyWith(
                                                        color: Colors.white)),
                                        subtitle: Obx(() => Text(
                                            "Vous avez ${controller.itemCounProductionDD} dossiers necessitent votre approbation",
                                            style: bodyMedium!.copyWith(
                                                color: Colors.white70))),
                                        initiallyExpanded: false,
                                        onExpansionChanged: (val) {
                                          setState(() {
                                            isOpen2 = !val;
                                          });
                                        },
                                        trailing: const Icon(
                                            Icons.arrow_drop_down,
                                            color: Colors.white),
                                        children: [
                                          TableProductionExpDD(
                                              productionExpController:
                                                  productionExpController)
                                        ],
                                      ),
                                    ),
                                  ])),
                        ))
                  ],
                )),
          );
  }
}
