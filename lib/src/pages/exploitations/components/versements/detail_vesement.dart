import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:intl/intl.dart';
import 'package:wm_solution/src/constants/app_theme.dart';
import 'package:wm_solution/src/constants/responsive.dart'; 
import 'package:wm_solution/src/models/exploitations/versement_projet_model.dart';
import 'package:wm_solution/src/navigation/drawer/drawer_menu.dart';
import 'package:wm_solution/src/navigation/header/header_bar.dart';
import 'package:wm_solution/src/pages/exploitations/controller/versements/versement_controller.dart'; 
import 'package:wm_solution/src/widgets/responsive_child_widget.dart';
import 'package:wm_solution/src/widgets/title_widget.dart';

class DetailVersement extends StatefulWidget {
  const DetailVersement({super.key, required this.versementProjetModel});
  final VersementProjetModel versementProjetModel;

  @override
  State<DetailVersement> createState() => _DetailVersementState();
}

class _DetailVersementState extends State<DetailVersement> {
  final GlobalKey<ScaffoldState> scaffoldKey = GlobalKey();
  String title = "Exploitation";

  @override
  Widget build(BuildContext context) {
    final VersementController controller = Get.find(); 
    return Scaffold(
        key: scaffoldKey,
        appBar: headerBar(context, scaffoldKey, title,
            widget.versementProjetModel.nomProjet),
        drawer: const DrawerMenu(),
        body: Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Visibility(
                visible: !Responsive.isMobile(context),
                child: const Expanded(flex: 1, child: DrawerMenu())),
            Expanded(
                flex: 5,
                child: SingleChildScrollView(
                    controller: ScrollController(),
                    physics: const ScrollPhysics(),
                    child: Container(
                      margin: const EdgeInsets.only(
                          top: p20,
                          bottom: p8,
                          right: p20,
                          left: p20),
                      decoration: const BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.circular(20))),
                      child: Column(
                        children: [
                          Card(
                            elevation: 3,
                            child: Padding(
                              padding: const EdgeInsets.symmetric(
                                  horizontal: p20),
                              child: Column(
                                crossAxisAlignment:
                                    CrossAxisAlignment.start,
                                children: [
                                  Row(
                                    mainAxisAlignment:
                                        MainAxisAlignment
                                            .spaceBetween,
                                    children: [
                                      const TitleWidget(
                                          title: "Versements"),
                                      Column(
                                        children: [
                                          Column(
                                            children: [
                                              IconButton(
                                                  tooltip:
                                                      'Supprimer',
                                                  onPressed:
                                                      () async {
                                                    alertDeleteDialog(
                                                        controller);
                                                  },
                                                  icon: const Icon(
                                                      Icons.delete),
                                                  color: Colors
                                                      .red.shade700),
                                              SelectableText(
                                                  DateFormat(
                                                          "dd-MM-yy HH:mm")
                                                      .format(widget
                                                          .versementProjetModel
                                                          .created),
                                                  textAlign: TextAlign
                                                      .start),
                                            ],
                                          ),
                                        ],
                                      )
                                    ],
                                  ),
                                  dataWidget(),
                                ],
                              ),
                            ),
                          )
                        ],
                      ),
                    )))
          ],
        ),
      ); 
  }

  alertDeleteDialog(VersementController controller) {
    return showDialog(
        context: context,
        barrierDismissible: true,
        builder: (context) {
          return StatefulBuilder(builder: (context, StateSetter setState) {
            return AlertDialog(
              title: const Text('Etes-vous sûr de vouloir faire ceci ?'),
              content: const SizedBox(
                  height: 100,
                  width: 100,
                  child: Text("Cette action permet de supprimer le document")),
              actions: <Widget>[
                TextButton(
                  onPressed: () => Navigator.pop(context, 'Cancel'),
                  child: const Text('Annuler'),
                ),
                TextButton(
                  onPressed: () async {
                    controller.versementProjetApi
                        .deleteData(widget.versementProjetModel.id!)
                        .then((value) {
                      Navigator.of(context).pop();
                    });
                  },
                  child: const Text('OK'),
                ),
              ],
            );
          });
        });
  }

  Widget dataWidget() {
    final bodyMedium = Theme.of(context).textTheme.bodyMedium;
    return Padding(
      padding: const EdgeInsets.all(p10),
      child: Column(
        children: [
          ResponsiveChildWidget(
              child1: Text('Nom Projet :',
                  textAlign: TextAlign.start,
                  style: bodyMedium!.copyWith(fontWeight: FontWeight.bold)),
              child2: SelectableText(widget.versementProjetModel.nomProjet,
                  textAlign: TextAlign.start, style: bodyMedium)),
          Divider(
            color: mainColor,
          ),
          ResponsiveChildWidget(
              child1: Text('Pièce Justificative :',
                  textAlign: TextAlign.start,
                  style: bodyMedium.copyWith(fontWeight: FontWeight.bold)),
              child2: SelectableText(
                  widget.versementProjetModel.pieceJustificative,
                  textAlign: TextAlign.start,
                  style: bodyMedium)),
          Divider(
            color: mainColor,
          ),
          ResponsiveChildWidget(
              child1: Text('Montant à Verser :',
                  textAlign: TextAlign.start,
                  style: bodyMedium.copyWith(fontWeight: FontWeight.bold)),
              child2: SelectableText(
                  "${NumberFormat.decimalPattern('fr').format(double.parse(widget.versementProjetModel.montantVerser))} \$",
                  textAlign: TextAlign.start,
                  style: bodyMedium)),
          Divider(
            color: mainColor,
          ),
          ResponsiveChildWidget(
              child1: Text('Montant En Lettre :',
                  textAlign: TextAlign.start,
                  style: bodyMedium.copyWith(fontWeight: FontWeight.bold)),
              child2: SelectableText(
                  widget.versementProjetModel.montantEnLettre,
                  textAlign: TextAlign.start,
                  style: bodyMedium)),
          Divider(
            color: mainColor,
          ),
          ResponsiveChildWidget(
              child1: Text('Type de Versement :',
                  textAlign: TextAlign.start,
                  style: bodyMedium.copyWith(fontWeight: FontWeight.bold)),
              child2: SelectableText(widget.versementProjetModel.typeVersement,
                  textAlign: TextAlign.start, style: bodyMedium)),
          Divider(
            color: mainColor,
          ),
          ResponsiveChildWidget(
              child1: Text('Signature :',
                  textAlign: TextAlign.start,
                  style: bodyMedium.copyWith(fontWeight: FontWeight.bold)),
              child2: SelectableText(widget.versementProjetModel.signature,
                  textAlign: TextAlign.start, style: bodyMedium)),
        ],
      ),
    );
  }
}
