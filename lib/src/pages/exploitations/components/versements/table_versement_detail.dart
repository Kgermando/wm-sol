import 'package:easy_table/easy_table.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:intl/intl.dart';
import 'package:wm_solution/src/constants/app_theme.dart';
import 'package:wm_solution/src/helpers/monnaire_storage.dart';
import 'package:wm_solution/src/models/exploitations/versement_projet_model.dart';
import 'package:wm_solution/src/pages/exploitations/controller/versements/versement_controller.dart';
import 'package:wm_solution/src/routes/routes.dart';
import 'package:wm_solution/src/widgets/title_widget.dart';

class TableVersementDetail extends StatefulWidget {
  const TableVersementDetail(
      {super.key,
      required this.versementList,
      required this.versementController});
  final List<VersementProjetModel> versementList;
  final VersementController versementController;

  @override
  State<TableVersementDetail> createState() => _TableVersementDetailState();
}

class _TableVersementDetailState extends State<TableVersementDetail> {
  final MonnaieStorage monnaieStorage = Get.put(MonnaieStorage());
  EasyTableModel<VersementProjetModel>? _model;

  @override
  void initState() {
    List<VersementProjetModel> rows = List.generate(
        widget.versementList.length, (index) => widget.versementList[index]);
    _model = EasyTableModel<VersementProjetModel>(rows: rows, columns: [
      EasyTableColumn(
        name: 'Date',
        width: 200,
        stringValue: (row) =>
            DateFormat("dd-MM-yyyy HH:mm").format(row.created),
      ),
      EasyTableColumn(
          name: 'Nom du Projet',
          width: 300,
          stringValue: (row) => row.nomProjet),
      EasyTableColumn(
          name: 'Pièce Justificative',
          width: 150,
          stringValue: (row) => row.pieceJustificative),
      EasyTableColumn(
          name: 'Montant à Verser',
          width: 200,
          stringValue: (row) =>
              "${NumberFormat.decimalPattern('fr').format(double.parse(row.montantVerser))} ${monnaieStorage.monney}"),
      EasyTableColumn(
          name: 'Montant En Lettre',
          width: 200,
          stringValue: (row) => row.montantEnLettre),
      EasyTableColumn(
          name: 'Type de Versement',
          width: 200,
          stringValue: (row) => row.typeVersement)
    ]);
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 400,
      child: Card(
          child: Padding(
        padding: const EdgeInsets.all(p10),
        child: Column(
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                const TitleWidget(title: "Versements"),
                IconButton(
                    onPressed: () {
                      setState(() {
                        widget.versementController.getList();
                      });
                    },
                    icon: const Icon(Icons.refresh, color: Colors.green))
              ],
            ),
            Expanded(
              child: EasyTable<VersementProjetModel>(
                _model,
                multiSort: true,
                columnsFit: true,
                onRowTap: (row) async {
                  final VersementProjetModel versementProjetModel =
                      await widget.versementController.detailView(row.id!);
                  Get.toNamed(ExploitationRoutes.expVersementDetail,
                      arguments: versementProjetModel);
                },
              ),
            ),
          ],
        ),
      )),
    );
  }
}
