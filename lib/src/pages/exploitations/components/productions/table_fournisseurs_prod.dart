import 'package:get/get.dart';
import 'package:wm_solution/src/constants/app_theme.dart';
import 'package:easy_table/easy_table.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:wm_solution/src/helpers/monnaire_storage.dart';
import 'package:wm_solution/src/models/exploitations/fourniseur_model.dart';
import 'package:wm_solution/src/pages/exploitations/controller/production/fournisseur_controller.dart';
import 'package:wm_solution/src/routes/routes.dart';
import 'package:wm_solution/src/widgets/title_widget.dart';

class TableFournisseurProd extends StatefulWidget {
  const TableFournisseurProd(
      {super.key, required this.fournisseurList, required this.controller});
  final List<FournisseurModel> fournisseurList;
  final FourniseurController controller;

  @override
  State<TableFournisseurProd> createState() => _TableFournisseurProdState();
}

class _TableFournisseurProdState extends State<TableFournisseurProd> {
  final MonnaieStorage monnaieStorage = Get.put(MonnaieStorage());
  EasyTableModel<FournisseurModel>? _model;

  @override
  void initState() {
    super.initState();
    List<FournisseurModel> rows = List.generate(widget.fournisseurList.length,
        (index) => widget.fournisseurList[index]);
    _model = EasyTableModel<FournisseurModel>(rows: rows, columns: [
      EasyTableColumn(
          name: 'QuantitÃ©',
          stringValue: (row) =>
              "${NumberFormat.decimalPattern('fr').format(double.parse(row.quantity))} ${row.unite}"),
      EasyTableColumn(
          name: 'Designation',
          width: 300,
          stringValue: (row) => row.designation),
      EasyTableColumn(
        cellAlignment: Alignment.center,
          name: 'Prix unitaire',
          width: 300,
          stringValue: (row) => "${row.prixUnitaire} ${monnaieStorage.monney}"),
      EasyTableColumn(
          cellAlignment: Alignment.center,
          name: 'Prix total',
          width: 300,
          stringValue: (row) {
            double total =
                double.parse(row.prixUnitaire) * double.parse(row.quantity);
            return "${NumberFormat.decimalPattern('fr').format(total)} ${monnaieStorage.monney}";
          }),
      EasyTableColumn(
          name: 'Fournisseur',
          width: 200,
          stringValue: (row) => row.fournisseur),
      EasyTableColumn(
          name: 'Signature', width: 100, stringValue: (row) => row.signature),
      EasyTableColumn(
          name: 'Date',
          width: 150,
          stringValue: (row) =>
              DateFormat("dd-MM-yy HH:mm").format(row.created)),
    ]);
  }

  @override
  Widget build(BuildContext context) {
    return Card(
      child: Padding(
        padding: const EdgeInsets.all(p10),
        child: Column(
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                const TitleWidget(title: 'Fournisseurs'),
                IconButton(
                    onPressed: () {
                      setState(() {
                        widget.controller.getList();
                      });
                    },
                    icon: const Icon(Icons.refresh, color: Colors.green))
              ],
            ),
            const SizedBox(height: p10),
            SizedBox(
                height: 300,
                child: EasyTable<FournisseurModel>(
                  _model,
                  multiSort: true,
                  onRowDoubleTap: (row) async {
                    final FournisseurModel fournisseurModel =
                        await widget.controller.detailView(row.id!);
                    Get.toNamed(ExploitationRoutes.expFournisseurDetail,
                        arguments: fournisseurModel);
                  },
                )),
          ],
        ),
      ),
    );
  }
}
