import 'package:get/get.dart';
import 'package:wm_solution/src/constants/app_theme.dart'; 
import 'package:easy_table/easy_table.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:wm_solution/src/models/exploitations/fourniseur_model.dart';
import 'package:wm_solution/src/pages/exploitations/controller/production/fournisseur_controller.dart';
import 'package:wm_solution/src/routes/routes.dart';

class TableFournisseurProd extends StatefulWidget {
  const TableFournisseurProd({super.key, required this.fournisseurList, required this.controller});
  final List<FournisseurModel> fournisseurList;
  final FourniseurController controller;

  @override
  State<TableFournisseurProd> createState() => _TableFournisseurProdState();
}

class _TableFournisseurProdState extends State<TableFournisseurProd> {
  EasyTableModel<FournisseurModel>? _model;

  @override
  void initState() { 
    super.initState();
    
    List<FournisseurModel> rows =
      List.generate(widget.fournisseurList.length, 
        (index) => widget.fournisseurList[index]);
    _model = EasyTableModel<FournisseurModel>(rows: rows, columns: [
      EasyTableColumn(
          name: 'QuantitÃ©',
          stringValue: (row) =>
              "${NumberFormat.decimalPattern('fr').format(double.parse(row.quantity))} ${row.unite}"),
      EasyTableColumn(
          name: 'Designation',
          width: 300,
          stringValue: (row) => row.designation), 
      EasyTableColumn(
          name: 'Prix unitaire',
          width: 300,
          stringValue: (row) => "${row.prixUnitaire} \$"),
      EasyTableColumn(
          name: 'Fournisseur',
          width: 200,
          stringValue: (row) => row.fournisseur),
      EasyTableColumn(
          name: 'Signature',
          width: 100,
          stringValue: (row) => row.signature),
      EasyTableColumn(
          name: 'Date',
          width: 150,
          stringValue: (row) => DateFormat("dd-MM-yy HH:mm").format(row.created)),
      EasyTableColumn(
          name: 'id',
          width: 50,
          intValue: (row) => row.id),
    ]);
  }


   @override
  Widget build(BuildContext context) {
    return Card(
      child: Padding(
        padding: const EdgeInsets.all(p10),
        child: SizedBox(
          height: 300,
          child: EasyTable<FournisseurModel>(
            _model, 
            multiSort: true,
            onRowDoubleTap: (row) async {
              final FournisseurModel fournisseurModel =
              await widget.controller.detailView(row.id!);
               Get.toNamed(ExploitationRoutes.expFournisseurDetail,
                    arguments: fournisseurModel);
            },
          )),
      ),
    );
  }
}